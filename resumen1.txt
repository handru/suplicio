RESUMEN
Este trabajo de tesis presenta la optimización de una aplicación científica del campo de la Dinámica de Fluidos, la cual se encuentra dentro de las aplicaciones de Cómputo de Altas Prestaciones, desarrollada entre 1999 y 2005. El código está escrito en lenguaje Fortran y se ejecutaba en una plataforma de hardware con recursos limitados. La aplicación entra también en el campo del Software Heredado (Legacy Software), programas vigentes tras diez, quince o más años. Estos generalmente son programas grandes, complejos, que desempeñan una tarea crucial en la organización a la que pertenecen. Particularmente en las áreas científicas, con problemas de cálculo intensivo, una vez que un programa arroja resultados correctos, no suelen existir modificaciones al código. Las aplicaciones heredadas enfrentan finalmente la problemática de dar respuesta a cambios ambientales, donde deben ser modernizadas o considerar terminar su ciclo de vida. El trabajo de modernizar un sistema legacy puede tener una envergadura variable, dependiendo de la complejidad del sistema y del nuevo ambiente donde vaya a funcionar. La modernización de una aplicación heredada puede verse como un proceso de optimización de la aplicación, sólo que para una plataforma diferente de aquella para la cual fue construida.

La aplicación en estudio analiza el comportamiento de la turbina eólica de eje horizontal y es parte de un trabajo de Doctorado presentado en la Universidad de Buenos Aires, el cual en su primer parte se analiza el flujo inviscido alrededor de la pala de la turbina. A través del método de los paneles se modela dicho flujo, y en particular la aplicación calcula las velocidades inducidas en un punto del panel para cada uno de los paneles.

El proceso de optimización de la aplicación pasa en primer instancia por una optimización serial y luego por una optimización paralela. De esta manera utiliza recursos que no estaban contemplados en su diseño original, tales como mayor cantidad de memoria, mas unidades de procesamiento y directivas de paralelización. La implementación de multiprocesamiento se realiza con la interfaz de programación paralela OpenMP, la cual provee un modelo portable y escalable para el desarrollo de aplicaciones paralelas de memoria compartida. La interfaz OpenMP es utilizada para aplicar de manera directa multihilos en memoria compartida.

En este trabajo se muestra el proceso de optimización con las distintas versiones de la aplicación, la versión original, sin modificar, la segunda versión que es una optimización del código serial para aprovechar la memoria RAM en lugar de escribir en disco, y por último la versión con optimización paralela, donde se utiliza OpenMP en las partes del código seleccionadas para tal fin. Se llevan a cabo mediciones de tiempo de cada versión de la aplicación en equipos seleccionados para las pruebas, tomando los tamaños de problema provistos con la aplicación los cuales están dados por la cantidad de paneles sobre los cuales calcular las velocidades. Se analiza principalmente el factor de mejora del rendimiento (speed-up) de las optimizaciones y también la utilización de los recursos de cada versión.
